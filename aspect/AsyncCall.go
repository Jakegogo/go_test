// Automatically generated by AspectGo (github.com/Jakegogo/aspectgo)
// DO NOT EDIT MANUALLY

package aspect

import aspectrt "github.com/Jakegogo/aspectgo/aspect/rt"
import "agaspect"

import "fmt"

func AsyncCall() {
	go (_aspect_proxy_0_Call_of())(1)

	// go func
	var a = 1
	go (_aspect_proxy_1_Anonymous_Async_Func_of(func(param1 int) {
		fmt.Println("async ", a)
	}))(1)
	fmt.Println("sync", a)
}

func Call(param1 int) {
	fmt.Println("async ")
}

func _proxy_0_Call_of(param1 int) {
	_ag_res := (&agaspect.GlsAspect{}).Advice(&aspectrt.ContextImpl{XArgs: []interface {
	}{param1}, XFunc: func(_ag_args []interface {
	}) []interface {
	} {
		_ag_arg0 := _ag_args[0].(int)
		Call(_ag_arg0)
		_ag_res := []interface {
		}{}
		return _ag_res
	}, XReceiver: nil})
	_ = _ag_res
	return
}

func _aspect_proxy_0_Call_of() func(int) {
	c := (&agaspect.GlsAspect{}).OnContextGet()
	return func(param1 int) {
		(&agaspect.GlsAspect{}).OnContextSet(c)
		_proxy_0_Call_of(param1)
	}
}

func _proxy_1_Anonymous_Async_Func_of(fun func(param1 int), param1 int) {
	_ag_res := (&agaspect.GlsAspect{}).Advice(&aspectrt.ContextImpl{XArgs: []interface {
	}{param1}, XFunc: func(_ag_args []interface {
	}) []interface {
	} {
		_ag_arg0 := _ag_args[0].(int)
		fun(_ag_arg0)
		_ag_res := []interface {
		}{}
		return _ag_res
	}, XReceiver: nil})
	_ = _ag_res
	return
}

func _aspect_proxy_1_Anonymous_Async_Func_of(fun func(param1 int)) func(int) {
	c := (&agaspect.GlsAspect{}).OnContextGet()
	fmt.Println("call get context")
	return func(param1 int) {
		(&agaspect.GlsAspect{}).OnContextSet(c)
		_proxy_1_Anonymous_Async_Func_of(fun, param1)
	}
}
