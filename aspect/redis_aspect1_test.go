// Automatically generated by AspectGo (github.com/Jakegogo/aspectgo)
// DO NOT EDIT MANUALLY

package aspect

import (
	"testing"
)

import "github.com/PinkDahlia/redis"

func TestZadd(t *testing.T) {
	z := &R{}
	z.client1.ZAdd("test")

}

type R struct {
	client1 redis.Client
}

type SClient redis.Client

func (c *SClient) ZAdd_Wapper(key string, members ...redis.Z) *redis.IntCmd {
	return c.ZAdd(key, members...)
}

//// not work
//type Cmdable struct {
//	Orign interface{}
//}
//
//func (c *Cmdable) ZAdd(key string, members ...redis.Z) *redis.IntCmd {
//
//	obj := reflect.ValueOf(c.Orign).Elem().FieldByName("client1").FieldByName("cmdable")
//
//	fmt.Println(obj.NumField())
//
//	methodV, _ := obj.Type().MethodByName("ZAdd")
//
//	value := methodV.Func.Call([]reflect.Value{reflect.ValueOf(key), reflect.ValueOf(members)})
//	fmt.Println(value)
//	return nil
//}
//
//func (c *Cmdable) setOrign(orign interface{}) *Cmdable {
//	c.Orign = orign
//	return c
//}
