// Automatically generated by AspectGo (github.com/Jakegogo/aspectgo)
// DO NOT EDIT MANUALLY

package aspect

import "agaspect"
import aspectrt "github.com/Jakegogo/aspectgo/aspect/rt"

import (
	"go_test/aspect"
)

type Obj struct {
	i int
}

func (o *Obj) AsyncCall(i int) (string, int) {

	v := &aspect.GlobalVar1{}
	go (_aspect_proxy_0_Call_of(v))()

	go (_aspect_proxy_1_Call_of())(1)
	return "123", 0
}

func _proxy_0_Call_of(_ag_recv *aspect.GlobalVar1) {
	_ag_res := (&agaspect.GlsAspect{}).Advice(&aspectrt.ContextImpl{XArgs: []interface {
	}{}, XFunc: func(_ag_args []interface {
	}) []interface {
	} {
		_ag_recv.Call()
		_ag_res := []interface {
		}{}
		return _ag_res
	}, XReceiver: _ag_recv})
	_ = _ag_res
	return
}

func _aspect_proxy_0_Call_of(_ag_recv *aspect.GlobalVar1) func() {
	_aspect_async_context := (&agaspect.GlsAspect{}).OnContextGet()
	return func() {
		(&agaspect.GlsAspect{}).OnContextSet(_aspect_async_context)
		_proxy_0_Call_of(_ag_recv)
		(&agaspect.GlsAspect{}).OnContextClear(_aspect_async_context)
	}
}

func _proxy_1_Call_of(_param1 int) {
	_ag_res := (&agaspect.GlsAspect{}).Advice(&aspectrt.ContextImpl{XArgs: []interface {
	}{_param1}, XFunc: func(_ag_args []interface {
	}) []interface {
	} {
		_ag_arg0, _ := _ag_args[0].(int)

		aspect.Call(_ag_arg0)
		_ag_res := []interface {
		}{}
		return _ag_res
	}, XReceiver: nil})
	_ = _ag_res
	return
}

func _aspect_proxy_1_Call_of() func(int) {
	_aspect_async_context := (&agaspect.GlsAspect{}).OnContextGet()
	return func(_param1 int) {
		(&agaspect.GlsAspect{}).OnContextSet(_aspect_async_context)
		_proxy_1_Call_of(_param1)
		(&agaspect.GlsAspect{}).OnContextClear(_aspect_async_context)
	}
}
